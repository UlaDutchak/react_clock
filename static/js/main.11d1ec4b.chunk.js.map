{"version":3,"sources":["components/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","time","Date","timer","setInterval","tick","this","prevProps","oldName","name","props","console","log","toLocaleTimeString","clearInterval","setState","className","React","Component","App","isClockVisible","clockName","randomClockName","Math","ceil","random","showClock","hideClock","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"2OAYaA,EAAb,4MACEC,MAAe,CACbC,KAAM,IAAIC,MAFd,EAKEC,MAAQC,aAAY,kBAAM,EAAKC,SAAQ,KALzC,uDAOE,WACE,OAAOC,KAAKH,QARhB,gCAWE,SAAmBI,GACjB,IAAMC,EAAUD,EAAUE,KAE1B,OAAOD,IAAYF,KAAKI,MAAMD,KAC1BE,QAAQC,IAAR,iCAAsCJ,EAAtC,eAAoDF,KAAKI,MAAMD,OAC/DE,QAAQC,IAAIN,KAAKN,MAAMC,KAAKY,wBAhBpC,kCAmBE,WACEC,cAAcR,KAAKH,SApBvB,kBAuBE,WACEG,KAAKS,SAAS,CACZd,KAAM,IAAIC,SAzBhB,oBA6BE,WACE,OACE,sBAAKc,UAAU,QAAf,UACE,mBAAGA,UAAU,cAAb,+BACkBV,KAAKI,MAAMD,QAE7B,mBAAGO,UAAU,eAAb,iCACoBV,KAAKN,MAAMC,KAAKY,+BApC5C,GAA2BI,IAAMC,WC4DlBC,G,kNA9DbnB,MAAe,CACboB,gBAAgB,EAChBC,UAAW,G,EAGbC,gBAAkB,WAChB,EAAKP,SAAS,CACZM,UAAWE,KAAKC,KAAqB,IAAhBD,KAAKE,a,EAI9BC,UAAY,WACV,EAAKX,SAAS,CACZK,gBAAgB,K,EAIpBO,UAAY,WACV,EAAKZ,SAAS,CACZK,gBAAgB,K,4CAIpB,WACE,MAAsCd,KAAKN,MAAnCoB,EAAR,EAAQA,eAAgBC,EAAxB,EAAwBA,UAExB,OACE,sBAAKL,UAAU,MAAf,UACGI,GAEC,mBAAGJ,UAAU,aAAb,SACE,cAAC,EAAD,CAAOP,KAAMY,MAGjB,sBAAKL,UAAU,cAAf,UACE,wBACEA,UAAU,mBACVY,KAAK,SACLC,QAASvB,KAAKoB,UAHhB,wBAOA,wBACEV,UAAU,mBACVY,KAAK,SACLC,QAASvB,KAAKqB,UAHhB,wBAOA,wBACEX,UAAU,mBACVY,KAAK,SACLC,QAASvB,KAAKgB,gBAHhB,uC,GAlDQL,IAAMC,YCNxBY,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.11d1ec4b.chunk.js","sourcesContent":["/* eslint-disable no-console */\nimport React from 'react';\nimport './Clock.scss';\n\ninterface Props {\n  name: number;\n}\n\ntype State = {\n  time: Date;\n};\n\nexport class Clock extends React.Component<Props, State> {\n  state: State = {\n    time: new Date(),\n  };\n\n  timer = setInterval(() => this.tick(), 1000);\n\n  componentDidMount() {\n    return this.timer;\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    const oldName = prevProps.name;\n\n    return oldName !== this.props.name\n      ? console.log(`Clock was renamed from ${oldName} to ${this.props.name}`)\n      : console.log(this.state.time.toLocaleTimeString());\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timer);\n  }\n\n  tick() {\n    this.setState({\n      time: new Date(),\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"clock\">\n        <p className=\"clock__name\">\n          {`Clock name: ${this.props.name}`}\n        </p>\n        <p className=\"clock__watch\">\n          {`Current time: ${this.state.time.toLocaleTimeString()}`}\n        </p>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { Clock } from './components/Clock';\nimport './App.scss';\n\ninterface State {\n  isClockVisible: boolean;\n  clockName: number;\n}\n\nclass App extends React.Component<{}, State> {\n  state: State = {\n    isClockVisible: true,\n    clockName: 0,\n  };\n\n  randomClockName = () => {\n    this.setState({\n      clockName: Math.ceil(Math.random() * 100),\n    });\n  };\n\n  showClock = () => {\n    this.setState({\n      isClockVisible: true,\n    });\n  };\n\n  hideClock = () => {\n    this.setState({\n      isClockVisible: false,\n    });\n  };\n\n  render() {\n    const { isClockVisible, clockName } = this.state;\n\n    return (\n      <div className=\"App\">\n        {isClockVisible\n        && (\n          <p className=\"App__clock\">\n            <Clock name={clockName} />\n          </p>\n        )}\n        <div className=\"App__button\">\n          <button\n            className=\"App__button-show\"\n            type=\"submit\"\n            onClick={this.showClock}\n          >\n            Show Clock\n          </button>\n          <button\n            className=\"App__button-hide\"\n            type=\"submit\"\n            onClick={this.hideClock}\n          >\n            Hide Clock\n          </button>\n          <button\n            className=\"App__button-name\"\n            type=\"submit\"\n            onClick={this.randomClockName}\n          >\n            Set random name\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}